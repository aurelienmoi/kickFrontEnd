{"version":3,"sources":["webpack:///./src/app/public/snap-register/snap-register.module.ts","webpack:///./src/app/public/snap-register/snap-register.page.html","webpack:///./src/app/public/snap-register/snap-register.page.scss","webpack:///./src/app/public/snap-register/snap-register.page.ts"],"names":[],"mappings":"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","file":"public-snap-register-snap-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FooterModule } from './../_inc/footer/footer.module';\r\n\r\nimport { SnapRegisterPage } from './snap-register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SnapRegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FooterModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SnapRegisterPage]\r\n})\r\nexport class SnapRegisterPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar class=\\\"secondBg\\\">\\r\\n    <ion-title class=\\\"pageTitle\\\"><img src=\\\"assets/img/signup.png\\\" style=\\\"height:20px; width:auto; margin-top:10px;\\\" /></ion-title>\\r\\n    <ion-button class=\\\"toolbarButton\\\" fill=\\\"clear\\\" color=\\\"medium\\\" routerLink=\\\"/home\\\" routerDirection=\\\"back\\\">\\r\\n      <ion-icon name=\\\"ios-arrow-back\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content fullscreen id=\\\"yellowBg\\\">\\r\\n  <div class=\\\"ion-padding ion-text-center mainDiv\\\">\\r\\n    <p class=\\\"slogan gradientKick\\\">{{slogan}}</p>\\r\\n    <div class=\\\"marginUnderSlg\\\"></div>\\r\\n    <form (ngSubmit)=\\\"registerForm()\\\">\\r\\n\\r\\n      <!-- PSEUDO INPUT -->\\r\\n      <ion-input name=\\\"pseudo\\\" type=\\\"text\\\" [pattern]=\\\"pseudoPattern\\\" #pseudo=\\\"ngModel\\\" [(ngModel)]=\\\"register.pseudo\\\" required (ionFocus)=\\\"pseudoInpFoc()\\\" (ionBlur)=\\\"pseudoInpBlur()\\\" placeholder=\\\"{{pseudoInput}}\\\" class=\\\"usernameInput bgInput\\\"></ion-input>\\r\\n      <ion-icon *ngIf = \\\"pseudo.errors?.required\\\" style=\\\"color:transparent;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"!pseudo.errors?.pattern && !pseudo.errors?.required\\\" style=\\\"color:green;\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"pseudo.errors?.pattern\\\" style=\\\"color:red;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <p class=\\\"inputMsg\\\" *ngIf=\\\"pseudoOnFocus\\\">{{pseudoMsg}}</p>\\r\\n      <div class=\\\"marginBetweenInputs\\\"></div>\\r\\n\\r\\n      <!-- USERNAME INPUT -->\\r\\n      <ion-input name=\\\"username\\\" type=\\\"text\\\" [pattern]=\\\"usernamePattern\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"register.username\\\" required (ionFocus)=\\\"usernameInpFoc()\\\" (ionBlur)=\\\"usernameInpBlur()\\\" placeholder=\\\"{{usernameInput}}\\\" class=\\\"usernameInput bgInput\\\"></ion-input>\\r\\n      <ion-icon *ngIf = \\\"username.errors?.required\\\" style=\\\"color:transparent;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"!username.errors?.pattern && !username.errors?.required\\\" style=\\\"color:green;\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"username.errors?.pattern\\\" style=\\\"color:red;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <p class=\\\"inputMsg\\\" *ngIf=\\\"usernameOnFocus\\\">{{usernameMsg}}</p>\\r\\n      <div class=\\\"marginBetweenInputs\\\"></div>\\r\\n\\r\\n      <!-- EMAIL INPUT -->\\r\\n      <ion-input name=\\\"email\\\" type=\\\"email\\\" [pattern]=\\\"emailPattern\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"register.email\\\" required (ionFocus)=\\\"emailInpFoc()\\\" (ionBlur)=\\\"emailInpBlur()\\\" placeholder=\\\"{{emailInput}}\\\" class=\\\"emailInput bgInput\\\"></ion-input>\\r\\n      <ion-icon *ngIf = \\\"email.errors?.required\\\" style=\\\"color:transparent;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"!email.errors?.pattern && !email.errors?.required\\\" style=\\\"color:green;\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"email.errors?.pattern\\\" style=\\\"color:red;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <p class=\\\"inputMsg\\\" *ngIf=\\\"emailOnFocus\\\">{{emailMsg}}</p>\\r\\n      <div class=\\\"marginBetweenInputs\\\"></div>\\r\\n\\r\\n      <!-- PASSWORD INPUT -->\\r\\n      <ion-input name=\\\"password\\\" type=\\\"password\\\" [pattern]=\\\"passwordPattern\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"register.password\\\" required (ionFocus)=\\\"passwordInpFoc()\\\" (ionBlur)=\\\"passwordInpBlur()\\\" placeholder=\\\"{{passwordInput}}\\\" class=\\\"passInput bgInput\\\"></ion-input>\\r\\n      <ion-icon *ngIf = \\\"password.errors?.required\\\" style=\\\"color:transparent;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"!password.errors?.pattern && !password.errors?.required\\\" style=\\\"color:green;\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"password.errors?.pattern\\\" style=\\\"color:red;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n\\r\\n      <!-- CONFIRM PASSWORD INPUT -->\\r\\n      <ion-input name=\\\"confirmPassword\\\" type=\\\"password\\\" [pattern]=\\\"passwordPattern\\\" #passwordConfirm=\\\"ngModel\\\" [(ngModel)]=\\\"register.passwordConfirm\\\" required (ionFocus)=\\\"passwordInpFoc()\\\" (ionBlur)=\\\"passwordInpBlur()\\\" (ionChange)=\\\"passwordConfChange()\\\" placeholder=\\\"{{passwordConfirmInput}}\\\" class=\\\"passInput bgInput\\\"></ion-input>\\r\\n      <ion-icon *ngIf = \\\"passwordConfirm.errors?.required\\\" style=\\\"color:transparent;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"!passwordConfirm.errors?.pattern && !passwordConfirm.errors?.required && passwordMatches\\\" style=\\\"color:green;\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"passwordConfirm.errors?.pattern && !passwordMatches\\\" style=\\\"color:red;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <ion-icon *ngIf = \\\"!passwordConfirm.errors?.pattern && !passwordMatches && !passwordConfirm.errors?.required\\\" style=\\\"color:red;\\\" name=\\\"close-circle\\\"></ion-icon>\\r\\n      <p class=\\\"inputMsg\\\" *ngIf=\\\"passwordOnFocus\\\">{{passwordMsg}}</p>\\r\\n      <div class=\\\"marginBetweenInputs\\\"></div>\\r\\n      <!-- SUBMIT -->\\r\\n      <ion-button *ngIf=\\\"!passwordConfirm.errors?.pattern && !passwordConfirm.errors?.required && !password.errors?.pattern && !password.errors?.required && !email.errors?.pattern && !email.errors?.required && !username.errors?.pattern && !username.errors?.required && passwordMatches\\\" expand=\\\"full\\\" color=\\\"tertiary\\\" type=\\\"submit\\\">{{loginBtn}}</ion-button>\\r\\n      <ion-button *ngIf=\\\"passwordConfirm.errors?.pattern || passwordConfirm.errors?.required || password.errors?.pattern || password.errors?.required || email.errors?.pattern || email.errors?.required || username.errors?.pattern || username.errors?.required || !passwordMatches\\\" expand=\\\"full\\\" color=\\\"tertiary\\\" disabled>{{loginBtn}}</ion-button>\\r\\n      <div class=\\\"marginBetweenInputs\\\"></div>\\r\\n    </form>\\r\\n\\r\\n    <!-- CGU -->\\r\\n    <div class=\\\"separator\\\">\\r\\n      <p class=\\\"footerFormMsg\\\">{{signupMsg}} <br><a href=\\\"http://kickapp.fr/cgu\\\">{{signupLink}} <ion-icon name=\\\"open\\\"></ion-icon></a></p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-footer></app-footer>\\r\\n</ion-content>\\r\\n\"","module.exports = \".mainDiv {\\n  padding-top: 0; }\\n\\n.slogan {\\n  margin-top: 20px; }\\n\\n.marginUnderSlg {\\n  height: 45px; }\\n\\n.bmjLogo {\\n  width: 100px;\\n  height: auto;\\n  border-radius: 50%; }\\n\\n.usernameInput {\\n  width: 60%;\\n  display: inline-block; }\\n\\n.emailInput {\\n  width: 60%;\\n  display: inline-block; }\\n\\n.passInput {\\n  width: 40%;\\n  display: inline-block;\\n  margin-left: 10px; }\\n\\n.inputMsg {\\n  font-size: small;\\n  margin: 0; }\\n\\n.separator {\\n  border-top: 1px solid black;\\n  width: 70%;\\n  margin: 0 auto;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHVibGljL3NuYXAtcmVnaXN0ZXIvRDpcXFdvcmtzcGFjZVxca2lja0FwcFxcS2lja2FwcC9zcmNcXGFwcFxccHVibGljXFxzbmFwLXJlZ2lzdGVyXFxzbmFwLXJlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGNBQWEsRUFBQTs7QUFLakI7RUFDSSxnQkFBZSxFQUFBOztBQUduQjtFQUNJLFlBQVcsRUFBQTs7QUFHZjtFQUNJLFlBQVc7RUFDWCxZQUFXO0VBQ1gsa0JBQWlCLEVBQUE7O0FBS3JCO0VBQ0ksVUFBUztFQUNULHFCQUFvQixFQUFBOztBQUd4QjtFQUNJLFVBQVM7RUFDVCxxQkFBb0IsRUFBQTs7QUFHeEI7RUFDSSxVQUFTO0VBQ1QscUJBQW9CO0VBQ3BCLGlCQUFnQixFQUFBOztBQUdwQjtFQUNJLGdCQUFlO0VBQ2YsU0FBUSxFQUFBOztBQUtaO0VBQ0ksMkJBQTBCO0VBQzFCLFVBQVU7RUFDVixjQUFjO0VBQ2QsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3B1YmxpYy9zbmFwLXJlZ2lzdGVyL3NuYXAtcmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBHRU5FUkFMIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbi5tYWluRGl2IHtcclxuICAgIHBhZGRpbmctdG9wOjA7XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gQkVGT1JFIEZPUk0gLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxuLnNsb2dhbiB7XHJcbiAgICBtYXJnaW4tdG9wOjIwcHg7IC8vIFNpemUgaW4gZ2xvYmFsLnNjc3NcclxufVxyXG5cclxuLm1hcmdpblVuZGVyU2xnIHtcclxuICAgIGhlaWdodDo0NXB4O1xyXG59XHJcblxyXG4uYm1qTG9nbyB7XHJcbiAgICB3aWR0aDoxMDBweDtcclxuICAgIGhlaWdodDphdXRvO1xyXG4gICAgYm9yZGVyLXJhZGl1czo1MCU7XHJcbn1cclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8gSU5QVVRTIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbi51c2VybmFtZUlucHV0IHtcclxuICAgIHdpZHRoOjYwJTtcclxuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uZW1haWxJbnB1dCB7XHJcbiAgICB3aWR0aDo2MCU7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxufVxyXG5cclxuLnBhc3NJbnB1dCB7XHJcbiAgICB3aWR0aDo0MCU7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OjEwcHg7XHJcbn1cclxuXHJcbi5pbnB1dE1zZyB7XHJcbiAgICBmb250LXNpemU6c21hbGw7XHJcbiAgICBtYXJnaW46MDtcclxufVxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLyBBRlRFUiBGT1JNIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbi5zZXBhcmF0b3Ige1xyXG4gICAgYm9yZGVyLXRvcDoxcHggc29saWQgYmxhY2s7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-snap-register',\r\n  templateUrl: './snap-register.page.html',\r\n  styleUrls: ['./snap-register.page.scss'],\r\n})\r\nexport class SnapRegisterPage implements OnInit {\r\n\r\n  // PATTERN INPUT\r\n  register : any = {}; //nécessaire pour utiliser nGmodel dans la page html\r\n  pseudoPattern = \".{2,25}\";\r\n  emailPattern = \"[A-Za-z0-9._+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})\"; // maybe delete % from email patter to a void SQL injections\r\n  usernamePattern = \"[A-Za-z0-9_-]{5,20}\";\r\n  passwordPattern = \"^([a-zA-Z0-9@*#.!]{7,40})$\";\r\n  passwordConfirmPattern = \"^([a-zA-Z0-9@*#.!]{7,40})$\";\r\n\r\n  // PAGE MAKER\r\n\r\n  pageTitle : string;\r\n\r\n  slogan : string;\r\n\r\n  // INPUTS\r\n\r\n  pseudoInput : string;\r\n  usernameInput : string;\r\n  emailInput : string;\r\n  emailConfirmInput : string;\r\n  passwordInput : string;\r\n  passwordConfirmInput : string;\r\n  loginBtn : string;\r\n\r\n  passwordMatches : boolean;\r\n\r\n  // Input Messages\r\n\r\n  pseudoMsg : string;\r\n  usernameMsg : string;\r\n  emailMsg : string;\r\n  passwordMsg : string;\r\n\r\n  // ON FOCUS\r\n\r\n  pseudoOnFocus : boolean;\r\n  usernameOnFocus : boolean;\r\n  emailOnFocus : boolean;\r\n  passwordOnFocus : boolean;\r\n\r\n  // ABOVE SUMBIT\r\n\r\n  signupMsg : string;\r\n  signupLink : string;\r\n\r\n  constructor(private http: HttpClient, private router : Router, private alertController : AlertController) {\r\n    this.pageTitle=\"Inscription\";\r\n\r\n    this.slogan = \"Plus qu'une petite étape...\";\r\n\r\n    this.pseudoInput=\"Blaze\"\r\n    this.usernameInput=\"Nom d'utilisateur\"\r\n    this.emailInput=\"Email\";\r\n    this.emailConfirmInput=\"Confirmer\";\r\n    this.passwordInput=\"Mot de passe\";\r\n    this.passwordConfirmInput=\"Confirmer\";\r\n\r\n    this.pseudoMsg = \"2 à 25 caractères. Tous caractères acceptés\";\r\n    this.passwordMsg = \"7 à 40 caractères. Caractères spéciaux acceptés\";\r\n    this.emailMsg = \"example@email.com\";\r\n    this.usernameMsg = \"5 à 20 caractères. Chiffres et underscore autorisés\";\r\n\r\n    this.loginBtn=\"Inscription\";\r\n\r\n    this.signupMsg = \"En cliquant sur inscription, je reconnait avoir lu et approuvé les\";\r\n    this.signupLink = \"Conditions Générales d'Utilisation\";\r\n  }\r\n\r\n  registerForm(){\r\n\r\n  console.log(this.register.email);\r\n\r\n    let data = {\r\n        username: this.register.username,\r\n        email : this.register.email,\r\n        password : this.register.password\r\n    };\r\n\r\n    this.http.post('https://https://kickserver.xyz/chatApp/registerMongoDB', data)\r\n    .subscribe(\r\n      (response : any) => {\r\n      \r\n      if (response.registeredIn === true) {\r\n  \r\n        this.presentAlert(\"Inscription réussie!\",\"\",\"Vous pouvez désormais vous connecter sur kickapp\")\r\n        console.log('Operation validee', response.registeredIn);\r\n        this.router.navigate(['login']);\r\n      }\r\n  \r\n      else if (response.emailAlreadyExisting ===true) {\r\n\r\n      this.presentAlert(\"Inscription refusée\",'',\"Email déja existant\");\r\n      console.log(\"email deja existant\");\r\n      //TODO ADD A MESSAGE THAT POPS TO SAY TO THE CLIENT EMAIL ALREADY  EXISTING\r\n      // TODO ADD A MESAGE IF USERNAME ALREADY TAKEN?\r\n\r\n      }\r\n      else if (response.usernameAlreadyExisting === true) {\r\n        this.presentAlert(\"Inscription refusée\",'',\"Nom d'utillisateur déja existant\");\r\n      }\r\n      console.log(response);\r\n    }, (err) => {\r\n      alert (\"erreur lors de l'inscription\")\r\n    });\r\n  }\r\n\r\n  presentAlert(header,subHeader,message,) {\r\n    const alert = document.createElement('ion-alert');\r\n    alert.header = header;\r\n    alert.subHeader = subHeader;\r\n    alert.message = message;\r\n    alert.buttons = ['OK'];\r\n  \r\n    document.body.appendChild(alert);\r\n    return alert.present();\r\n  }\r\n\r\n  pseudoInpFoc() {\r\n    this.pseudoOnFocus = true;\r\n  }\r\n  pseudoInpBlur() {\r\n    this.pseudoOnFocus = false;\r\n  }\r\n  usernameInpFoc() {\r\n    this.usernameOnFocus = true;\r\n  }\r\n  usernameInpBlur() {\r\n    this.usernameOnFocus = false;\r\n  }\r\n  emailInpFoc() {\r\n    this.emailOnFocus = true;\r\n  }\r\n  emailInpBlur() {\r\n    this.emailOnFocus = false;\r\n  }\r\n  passwordInpFoc() {\r\n    this.passwordOnFocus = true;\r\n  }\r\n  passwordInpBlur() {\r\n    this.passwordOnFocus = false;\r\n  }\r\n  passwordConfChange () {\r\n    if (this.register.password === this.register.passwordConfirm) {\r\n      this.passwordMatches = true;\r\n    } else {\r\n      this.passwordMatches = false;\r\n    }\r\n  }\r\n  \r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}